-- Create database myntra;
-- use myntra;
select * from myntra.products;
select product_name, brand_name from products;

select rating ,brand_name, rating_count, marked_price, discounted_price 
, marked_price - discounted_price as dicount_amt from products;
-- marked_price - discounted price is just shown in results its not permanent to make it add in orginal sheet youll have to us alter command
 
select rating ,brand_name, rating_count, marked_price, discounted_price ,discount_percent,
marked_price - discounted_price as dicount_amt, round (((marked_price - discounted_price)/marked_price) * 100,2)
 as discount_perc from products;

select rating_count*rating as rating_filter from products;

select distinct(brand_name) from products;
select product_name, brand_name, rating_count, rating from products where brand_name = 'Nike';

select distinct * from products;
select distinct (brand_name) from products;
select count(distinct(brand_name)) from products;

--  Q1)find how many tshirts are there in the data set

select count(*) from products
        where product_tag = 'tshirts';
        
select distinct(product_tag) from products;

-- Q2) Find brands that are selling tshirts 
select distinct(brand_name) from products
        where product_tag = 'tshirts';

select count(distinct(brand_name)) from products
        where product_tag = 'tshirts';
        

-- how to go for multiple conditions
select distinct * from products
       where brand_tag = 'adidas' and discounted_price > 5000;
       
       
-- Q3) find how many tshirts are there under 1000rs

select count(*) from products
        where product_tag = 'tshirts' and discounted_price < 1000;
        
-- Q4) find the name of brands that are selling shirts with price more than 5000
select distinct(brand_name) from products
        where product_tag = 'shirts' and discounted_price > 5000;

select count(distinct(brand_name)) from products
        where product_tag = 'shirts' and discounted_price > 5000;
        
-- Q5) different categories Blackberrys serves in under 5000rs

select distinct(product_tag) from products
        where brand_name = 'Blackberrys' and discounted_price <5000;

select count(distinct(product_tag)) from products
        where brand_name = 'Blackberrys' and discounted_price <5000;
        
-- Q6) Find Nike tshirts between range 2000-3000

select * from products
        where brand_name = 'NIKE' and product_tag = 'tshirts' and discounted_price between 2000 and 3000;


-- Q7 Find tshirts between 2000- 3000 from either nike or adidas

select * from products
        where brand_name = 'NIKE' or brand_name = 'ADIDAS' and product_tag = 'tshirts' and discounted_price between 2000 and 3000;
        
-- using not
select distinct * from products
  where not (brand_name = 'adidas') and (discounted_price between 5000 and 8000);
  
-- alternate of brand_name = 'NIKE' or brand_name = 'ADIDAS'
 
select distinct * from products
  where brand_name in ('adidas', 'nike') and (discounted_price between 5000 and 8000);


-- to sort results by using order by
select * from products
       order by discounted_price desc;
       
-- to find top 5 brands use limit function
select * from products
       order by discounted_price desc limit 5;

# creating columns of total revenue generated by each product
Select discounted_price, rating_count, discounted_price*rating_count as 'revenue' from products;      

select sum(discounted_price*rating_count ) as 'total revenue' from products;

-- SORTING (using order by)
select * from products
       order by discounted_price desc;
       
-- write a query that will give you top 5 most and least expensive products on basis of discounted price
select * from products order by discounted_price desc limit 5;

select * from products order by discounted_price asc limit 5;
 -- offset (which tells you  from where to start ex- below in 5,5 it will give 5 values after the first 5)
 
 select * from products order by discounted_price desc limit 5,5;
 select * from products order by discounted_price asc limit 10,1;

-- example of offset -  find second expensive product

select * from products order by discounted_price desc limit 1,1;


-- find worst rated product
select * from products order by rating asc limit 1;

-- Q find top 10 best rated t shirts from nike or adidas  | use rating*rating count

select product_tag, brand_name, rating , rating_count, rating*rating_count as 'final score'  from products 
      where brand_name in ('Nike' ,'Adidas') and product_tag = 'tshirts'
      order by rating_count* rating desc limit 10;

 -- find 10 worst rated products atleast bought by 100 people 
 
select product_tag, brand_name, rating , rating_count from products
      where rating_count > 100 
      order by rating asc limit 10;
      

-- GROUP BY FUNCTION --
-- find how much products each brand has sold

select brand_name , sum(rating_count)
      from products
      group by brand_name;
      
-- find top 5 best selling brands
select brand_name , sum(rating_count), round(avg(rating),2)
      from products
      group by brand_name
      order by sum(rating_count) desc limit 5;
      

-- revenue 
select brand_name , sum(rating_count*discounted_price), round(avg(rating),2)
      from products
      group by brand_name
      order by sum(rating_count*discounted_price) desc limit 5;
      
-- top product categories, that are sold the most

select product_tag ,sum(rating_count), round(avg(rating),2)
      from products
      group by product_tag
      order by sum(rating_count)
      desc limit 10;
-- based on revenue and analysisng prices , min, max, avg
select product_tag ,sum(rating_count), sum(rating_count*discounted_price), avg(discounted_price), avg(marked_price),min(discounted_price),max(discounted_price)
      from products
      group by product_tag
      order by sum(rating_count)
      desc limit 10;
      
      
-- Find the top 5 brands that have most no of products sold and unique products sell
select brand_name, sum(rating_count), count(distinct(product_tag))
      from products
      group by brand_name
      order by sum(rating_count) 
      desc limit 5;

-- which category of any specific brand is sold the most ( here you have to find combination of brand and product sold most)
select product_tag, brand_name, sum(rating_count) as 'sold' from products
      group by product_tag, brand_name
      order by sold desc;

use myntra;

-- Find products where product name ends with s
select * from products
	Where product_name like ('%s');
    
    
-- Find Products where brand name consists ad
select * from products
    Where brand_name like('%ad%');
-- Find products where product name starts with p and ends with s

select * from products
	Where brand_name like ('p%s');
-- Find Products where brand name is of 6 Characters
select * from products
    Where brand_name like '______';
    

-- TOp 5 brands that sold most number tshirts
select brand_name, Sum(rating_count) from products
     Where product_tag = 'Tshirts'
     Group by Brand_name
     Order by Sum(rating_count)
     Desc limit 5;
     
-- Most popular product name listed on myntra

Select product_name, count(rating_count) from products
Group by product_name
     Order by count(rating_count)
     Desc limit 5;
     
-- relation b/w price of tshirt and its rating wrt people  rated
select product_tag, rating,round(avg(rating_count)) as 'pcount',
   round(avg(discounted_price)) from products
   where product_tag = 'tshirts'
   group by rating
   order by rating asc;
   
-- Find the avg rating of each product category along with number of products and total rating count

select product_tag, avg(rating), count(product_name), SUM(rating_count)
from products
group by product_tag
order by avg(rating) DESC;

-- find the brand with highest avg rating among products with price greater than 5000

select brand_name,avg(rating) from products
      Where discounted_price > 5000
      group by brand_name
      order by avg(rating)
      DESC LIMIT 5;



      


      







